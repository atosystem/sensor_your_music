import{f as e}from"./vendor.519c7c38.js";!function(e=".",n="__import__"){try{self[n]=new Function("u","return import(u)")}catch(t){const o=new URL(e,location),a=e=>{URL.revokeObjectURL(e.src),e.remove()};self[n]=e=>new Promise(((t,c)=>{const i=new URL(e,o);if(self[n].moduleMap[i])return t(self[n].moduleMap[i]);const s=new Blob([`import * as m from '${i}';`,`${n}.moduleMap['${i}']=m;`],{type:"text/javascript"}),d=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(s),onerror(){c(new Error(`Failed to import: ${e}`)),a(d)},onload(){t(self[n].moduleMap[i]),a(d)}});document.head.appendChild(d)})),self[n].moduleMap={}}}("/assets/");const n={apiKey:"AIzaSyChwv4ULSZFHYI3dS1xs_by7eFDfb8I2HE",authDomain:"test-4e071.firebaseapp.com",projectId:"test-4e071",storageBucket:"test-4e071.appspot.com",messagingSenderId:"251598311975",appId:"1:251598311975:web:0216503ce4960f768d3402"};e.apps.length||e.initializeApp(n);const t=e.firestore(),o=new RTCPeerConnection({iceServers:[{urls:["stun:stun1.l.google.com:19302","stun:stun2.l.google.com:19302"]}],iceCandidatePoolSize:10});let a="client";const c=document.getElementById("callButton"),i=document.getElementById("callInput"),s=document.getElementById("answerButton"),d=document.getElementById("txt_send"),r=document.getElementById("btn_send"),l=document.getElementById("div_connect_status"),m=document.getElementById("sensors_ui"),u=document.getElementById("server_ui"),p=document.getElementById("start_demo"),g=document.getElementById("txt_udp_port"),v=document.getElementById("span_mode"),y=document.getElementById("div_ws_status");let f,w,b,L;f=o.createDataChannel("sendDataChannel",null),f.onopen=M,f.onclose=M,o.ondatachannel=function(e){console.log("Receive Channel Callback"),w=e.channel,w.onmessage=I,w.onopen=E,w.onclose=E};const _=new URLSearchParams(window.location.search),h=Object.fromEntries(_.entries());function I(e){b.send(`${L}:${e.data}`)}function M(){let e=f.readyState;console.log("Send channel state is: "+e),"open"===e?("server"===a?l.innerHTML="client connect":"client"===a&&(l.innerHTML="connected to server",p.classList.remove("disabled")),l.className="badge bg-success"):("server"===a?l.innerHTML="client disconnect":"client"===a&&(l.innerHTML="disconnected to server"),l.className="badge bg-danger")}function E(){let e=w.readyState;console.log("Receive channel state is: "+e)}console.log(h),r.onclick=function(e){let n=d.value;f.send(n),console.log("Sent Data: "+n)},c.onclick=async()=>{if(""===g.value)return void alert("Please assign udp port to pd");L=parseInt(g.value),g.disabled=!0,console.log(`Using udp port=${L}`),c.classList.add("disabled");const e=t.collection("calls").doc(),n=e.collection("offerCandidates"),a=e.collection("answerCandidates");i.value=e.id;let s=document.createElement("img");s.src=`https://api.qrserver.com/v1/create-qr-code/?size=500x500&data=https://atosystem.github.io/sensor_your_music/?connect_code=${e.id}`,m.appendChild(s),document.title=`Listen to ${L}`,o.onicecandidate=e=>{e.candidate&&n.add(e.candidate.toJSON())};const d=await o.createOffer();await o.setLocalDescription(d);const r={sdp:d.sdp,type:d.type};await e.set({offer:r}),e.onSnapshot((e=>{const n=e.data();if(!o.currentRemoteDescription&&(null==n?void 0:n.answer)){const e=new RTCSessionDescription(n.answer);o.setRemoteDescription(e)}})),a.onSnapshot((e=>{console.log("Candidate answered"),e.docChanges().forEach((e=>{if("added"===e.type){const n=new RTCIceCandidate(e.doc.data());o.addIceCandidate(n)}}))})),l.innerHTML="Waiting for client"};const C=async()=>{const e=i.value,n=t.collection("calls").doc(e),a=n.collection("answerCandidates"),c=n.collection("offerCandidates");o.onicecandidate=e=>{e.candidate&&a.add(e.candidate.toJSON())};const s=(await n.get()).data();null==s&&(l.innerHTML="cannot connect to server",l.className="badge bg-danger"),console.log("callData",s);const d=s.offer;await o.setRemoteDescription(new RTCSessionDescription(d));const r=await o.createAnswer();await o.setLocalDescription(r);const m={type:r.type,sdp:r.sdp};await n.update({answer:m}),c.onSnapshot((e=>{e.docChanges().forEach((e=>{if("added"===e.type){let n=e.doc.data();o.addIceCandidate(new RTCIceCandidate(n))}}))}))};s.onclick=C,"connect_code"in h?(i.value=h.connect_code,u.innerHTML="",i.disabled=!0,c.disabled=!0,s.disabled=!0,a="client",l.innerHTML="connecting to server",v.innerHTML="Client Mode",p.classList.add("disabled"),C()):"localhost"===location.hostname||"127.0.0.1"===location.hostname?(console.log("Using localhost"),a="server",l.innerHTML="Please Start the server",m.innerHTML="",s.disabled=!0,i.disabled=!0,d.disabled=!0,r.disabled=!0,v.innerHTML="Server Mode",b=new WebSocket("ws://localhost:3005"),console.log(b),b.onopen=()=>{console.log("[ws]open connection")},b.onerror=e=>{y.innerHTML="websocket error"},b.onclose=()=>{y.innerHTML="websocket closed",console.log("[ws]close connection")}):(l.innerHTML="Free mode",document.body.style.overflow="auto",a="free_mode");let T=[0,0,0];function R(e){H("Orientation_a",e.alpha),H("Orientation_b",e.beta),H("Orientation_g",e.gamma),T=[e.alpha,e.beta,e.gamma],S()}function S(){let e=document.getElementById("num-observed-events"),n=parseInt(e.innerHTML);e.innerHTML=n+1}function H(e,n,t=10){null!=n&&(document.getElementById(e).innerHTML=n.toFixed(t))}function $(e){let n="";n+=`${e.accelerationIncludingGravity.x} ${e.accelerationIncludingGravity.y} ${e.accelerationIncludingGravity.z} `,n+=`${e.acceleration.x} ${e.acceleration.y} ${e.acceleration.z} `,n+=`${e.rotationRate.alpha} ${e.rotationRate.beta} ${e.rotationRate.gamma} `,n+=`${T[0]} ${T[1]} ${T[2]}`,f.send(`${n}`),H("Accelerometer_gx",e.accelerationIncludingGravity.x),H("Accelerometer_gy",e.accelerationIncludingGravity.y),H("Accelerometer_gz",e.accelerationIncludingGravity.z),H("Accelerometer_x",e.acceleration.x),H("Accelerometer_y",e.acceleration.y),H("Accelerometer_z",e.acceleration.z),H("Accelerometer_i",e.interval,2),H("Gyroscope_z",e.rotationRate.alpha),H("Gyroscope_x",e.rotationRate.beta),H("Gyroscope_y",e.rotationRate.gamma),S()}let B=!1;p.onclick=function(e){e.preventDefault(),"undefined"!=typeof DeviceMotionEvent?(DeviceMotionEvent&&"function"==typeof DeviceMotionEvent.requestPermission&&DeviceMotionEvent.requestPermission(),B?(window.removeEventListener("devicemotion",$),window.removeEventListener("deviceorientation",R),p.innerHTML="Start demo",p.classList.add("btn-success"),p.classList.remove("btn-danger"),B=!1):(window.addEventListener("devicemotion",$),window.addEventListener("deviceorientation",R),document.getElementById("start_demo").innerHTML="Stop demo",p.classList.remove("btn-success"),p.classList.add("btn-danger"),B=!0)):alert("Cannot connect to sensors!")};
